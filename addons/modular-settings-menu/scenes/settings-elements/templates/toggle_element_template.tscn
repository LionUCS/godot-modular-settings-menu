[gd_scene load_steps=3 format=3 uid="uid://cxaxyqer0af21"]

[sub_resource type="GDScript" id="GDScript_bpxmf"]
resource_name = "toggle_element_template"
script/source = "extends HBoxContainer

# Default value for the element
@export var defaultValue: bool = false
# Toggle based on whether the element handles a setting that requires an in game node to exist
@export var isInGameSetting: bool
# Toggle based on whether the element is a sub element or not
@export var isSubElement: bool

# Reference to the node the settings element is under
@onready var parentRef: Node = owner
# Identifier for the element (used as the key for the section in the settings data)
@onready var identifier: StringName = name

# Element node references
@onready var toggleRef: CheckButton = $Toggle

# Resource for common functions between settings elements
const ElementResource: Resource = SettingsDataManager.ElementResource

# The current value of the element
var currentValue: bool


func _ready():
	# Initialize the element
	ElementResource.init_element(&\"toggle\", parentRef, self)


# Loads the saved/default values of the element
func load_settings() -> void:
	# List of values for the element
	var VALUES: Dictionary = {
		\"defaultValue\": defaultValue,
		\"validOptions\": [true, false]
	}
	
	# Get the current value for the element
	currentValue = ElementResource.load_element_settings(VALUES, parentRef, self)
	
	# Set the state of the toggle button
	toggleRef.set_pressed(currentValue)


func toggled(state: bool) -> void:
	# Update the settings cache
	ElementResource.toggled(parentRef, self, state)


# Called to apply the setting to the game
func apply_settings() -> void:
	pass
"

[sub_resource type="StyleBoxEmpty" id="StyleBoxEmpty_drjjf"]

[node name="ToggleElementTemplate" type="HBoxContainer"]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource("GDScript_bpxmf")

[node name="Label" type="Label" parent="."]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 1
text = "Toggle Element"
vertical_alignment = 1

[node name="Toggle" type="CheckButton" parent="."]
layout_mode = 2
size_flags_horizontal = 3
focus_mode = 0
theme_override_styles/focus = SubResource("StyleBoxEmpty_drjjf")
