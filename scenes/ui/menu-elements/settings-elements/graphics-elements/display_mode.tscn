[gd_scene load_steps=3 format=3 uid="uid://byff0jwaicxvr"]

[sub_resource type="GDScript" id="GDScript_duwn0"]
resource_name = "display_mode"
script/source = "extends HBoxContainer

@onready var options: OptionButton = %Options

@export_enum(\"Fullscreen\", \"Windowed\", \"Borderless Windowed\") var defaultValue: String

var selectedId: int
var currentValue: String

var DISPLAY_MODES: Dictionary = {
	\"Fullscreen\": DisplayServer.WINDOW_MODE_EXCLUSIVE_FULLSCREEN,
	\"Windowed\": DisplayServer.WINDOW_MODE_WINDOWED, 
	\"Borderless Windowed\": DisplayServer.WINDOW_MODE_WINDOWED
}


func _ready():
	options.connect(\"item_selected\", mode_selected)
	owner.connect(\"apply_settings\", apply_settings)
	owner.connect(\"get_default_settings\", get_default_settings)
	SettingsDataManager.connect(\"load_settings\", load_settings)
	
	owner.REFERENCE_TABLE[name] = self
	load_settings()


func initialize_modes() -> void:
	var id: int = 0
	
	for mode in DISPLAY_MODES:
		options.add_item(mode, id)
		if mode == currentValue:
			options.select(id)
			selectedId = id
		
		id += 1


func mode_selected(index: int) -> void:
	owner.GRAPHICS_SETTINGS_CACHE[name] = options.get_item_text(index)
	selectedId = index
	owner.settings_changed()
	
	if owner.REFERENCE_TABLE.has(\"Resolution\"):
		var resolution = owner.REFERENCE_TABLE[\"Resolution\"]
		
		if options.get_item_text(index) != \"Windowed\":
			resolution.options.set_disabled(true)
		else:
			resolution.options.set_disabled(false)


func apply_settings() -> void:
	var selected: String = options.get_item_text(selectedId)
	
	if selected == \"Borderless Windowed\":
		DisplayServer.window_set_flag(DisplayServer.WINDOW_FLAG_BORDERLESS, true)
	else:
		DisplayServer.window_set_flag(DisplayServer.WINDOW_FLAG_BORDERLESS, false)
	
	DisplayServer.window_set_mode(DISPLAY_MODES[selected])


func load_settings() -> void:
	if SettingsDataManager.noSaveFile:
		currentValue = defaultValue
	else:
		currentValue = SettingsDataManager.SETTINGS_DATA[owner.name][name]
	
	initialize_modes()
	apply_settings()


func get_default_settings() -> void:
	owner.GRAPHICS_SETTINGS_CACHE[name] = currentValue
"

[sub_resource type="StyleBoxEmpty" id="StyleBoxEmpty_drjjf"]

[node name="DisplayMode" type="HBoxContainer"]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource("GDScript_duwn0")

[node name="Label" type="Label" parent="."]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 1
text = "Display Mode"
vertical_alignment = 1

[node name="Options" type="OptionButton" parent="."]
unique_name_in_owner = true
layout_mode = 2
size_flags_horizontal = 3
focus_mode = 0
theme_override_styles/focus = SubResource("StyleBoxEmpty_drjjf")
